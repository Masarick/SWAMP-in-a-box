#!/bin/sh

# This file is subject to the terms and conditions defined in
# 'LICENSE.txt', which is part of this source code distribution.
#
# Copyright 2012-2016 Software Assurance Marketplace

### BEGIN INIT INFO
# Provides: swampd
# Required-Start: $local_fs $network $remote_fs
# Required-Stop: $local_fs $network $remote_fs
# Default-Start: 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Suspend/resume SWAMP daemons on shutdown/boot
# Description: SWAMP is a collection of software for performing Software Assurance.
#              See http://continuousassurance.org.
### END INIT INFO
#
# chkconfig: 345 99 01
# description: SWAMP is a collection of software for performing Software Assurance.
# config: /opt/swamp/etc/swamp.conf
# pidfile: /opt/swamp/run/swamp_monitor.pid

# Source function library.
. /etc/rc.d/init.d/functions
. /etc/sysconfig/network

# Check that networking is up.
[ "${NETWORKING}" = "no" ] && exit 0

# Set up environment.
SWAMP=/opt/swamp
bin=$SWAMP/bin/swamp_monitor
pidfile=${PIDFILE-${SWAMP}/run/swamp_monitor.pid}
lockfile=/tmp/swamp.lck

# Set up `perl` environment directly.
export PATH=/opt/perl5/perls/perl-5.18.1/bin:$PATH
export PERL5LIB=/opt/swamp/perl5

# Determine how we were called.
case "$1" in
    start)
        # Start daemons.
        echo -n "Starting SWAMP: "
        cd $SWAMP/run
        daemon --user swa-daemon --pidfile ${pidfile} $bin --debug --daemon -C $SWAMP/etc/swampinabox.conf
        /usr/bin/pgrep -f swamp_monitor > ${pidfile}
        RETVAL=$?
        echo
        [ $RETVAL = 0 ] && touch ${lockfile}
        ;;
    stop)
        # Stop daemons.
        echo -n "Shutting down SWAMP: "
        killproc -p ${pidfile} swamp_monitor
        RETVAL=$?
        echo
        [ $RETVAL = 0 ] && rm -f ${lockfile} ${pidfile}
        ;;
    restart)
        $0 stop
        sleep 2 # Give the existing daemon time to vacate
        $0 start
        ;;
    reload)
        echo -n $"Reloading SWAMP: "
        killproc -p ${pidfile} swamp_monitor -HUP
        RETVAL=$?
        echo
        ;;
    status)
        status -p ${pidfile}  swamp_monitor
        ;;
    *)
        echo "Usage: swamp {start|stop|restart|reload|status}"
        exit 1
esac

exit 0
