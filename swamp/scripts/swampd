#!/bin/sh

# This file is subject to the terms and conditions defined in
# 'LICENSE.txt', which is part of this source code distribution.
#
# Copyright 2012-2016 Software Assurance Marketplace

#
#  This script takes care of starting and stopping the SWAMP daemon on the HTCondor submit node
#
# the following is the LSB init header
#
### BEGIN INIT INFO
# Provides: swampd
# Required-Start: 
# Required-Stop: 
# Default-Start: 3 4 5
# Default-Stop: 0 1 6
# Short-Description: suspend/resume SWAMP daemons on shutdown/boot
# Description: This is a script for starting/stopping SWAMP  daemons
#              on shutdown and resuming them on next boot
#              See http://continuousassurance.org
### END INIT INFO

# the following is chkconfig init header
# chkconfig: 345 99 01
# description: SWAMP is a collection of software for performing Software Assurance.
# config: /opt/swamp/etc/swamp.conf

# Source function library
. /etc/rc.d/init.d/functions

. /etc/sysconfig/network

# Check that networking is up.
[ ${NETWORKING} = "no" ] && exit 0
SWAMP=/opt/swamp
bin=$SWAMP/bin/swamp_monitor
#bin=/opt/swamp/bin/AgentMonitor.pl
#bin2=/opt/swamp/bin/LaunchPad.pl
#binj="nohup /opt/jdk1.8.0_45/linux/jre/bin/java -jar /opt/swamp/jar/agentdispatcher.jar&"

pidfile=${PIDFILE-${SWAMP}/run/swamp_monitor.pid}
#pidfile=${PIDFILE-/opt/swamp/run/swamp.pid}
#pidfile2=${PIDFILE-/opt/swamp/run/launch.pid}
#pidfilej=${PIDFILE-/opt/swamp/run/agentdispatcher.pid}

lockfile=/tmp/swamp.lck
export PERLBREW_ROOT=/opt/perl5
source $PERLBREW_ROOT/etc/bashrc
perlbrew use perl-5.18.1
export PERLLIB=$PERLLIB:/opt/swamp/perl5
export PERL5LIB=$PERL5LIB:/opt/swamp/perl5
# See how we were called.
case "$1" in
  start)
	# Start daemons.
	echo -n "Starting SWAMP: "
	cd $SWAMP/run
	daemon --user swa-daemon --pidfile ${pidfile} $bin --debug --daemon -C $SWAMP/etc/submonitor.conf 
	/usr/bin/pgrep -f swamp_monitor > ${pidfile}
	RETVAL=$?
	echo
    [ $RETVAL = 0 ] && touch ${lockfile}
	;;
  stop)
	# Stop daemons.
	echo -n "Shutting down SWAMP: "
	killproc -p ${pidfile} swamp_monitor
    RETVAL=$?
	echo
	[ $RETVAL = 0 ] && rm -f ${lockfile} ${pidfile}
	;;
  restart)
	$0 stop
	$0 start
	;;
  reload)
	echo -n $"Reloading SWAMP: "
	killproc -p ${pidfile} swamp_monitor -HUP
	RETVAL=$?
	echo
        ;;
  status)
	status -p ${pidfile}  swamp_monitor
	;;
  *)
	echo "Usage: swamp {start|stop|restart|reload|status}"
	exit 1
esac

exit 0


